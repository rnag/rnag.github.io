# This workflow will push and update articles on dev.to each time a new
# commit is pushed to the main branch.
#
# To make it work, you need a dev.to API key, see:
# https://developers.forem.com/api/#section/Authentication/api_key
#
# Once you have generated the token, you need to add them as a secret in your
# GitHub repository:
# - DEVTO_TOKEN: your dev.to API key
# See https://help.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets#creating-encrypted-secrets
# for more information about GitHub secrets.

name: publish
on:
  push:
    branches: [main]
  # pull_request:
  #   branches: [main]

jobs:
  # build:
  #   name: Build
  #   if: github.event_name == 'pull_request'
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [18]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         cache: yarn
  #     - run: yarn

  #     - name: Install textlint
  #       run: 'yarn add -D textlint textlint-rule-common-misspellings textlint-rule-spellchecker'

  #     - name: Run textlint
  #       run: npx textlint -f checkstyle "posts/**/*.md" >> .textlint.log

  #     - name: Run Prettier
  #       run: yarn run prettier:check

  #     - name: Run Embedme
  #       run: yarn run embedme:check

  build:
    name: build
    runs-on: ubuntu-latest

    steps:
      - name: Get Changed Files
        id: files
        uses: jitterbit/get-changed-files@v1
      - id: posts
        name: Detecting posts from the changes
        run: |
          i=0
          for changed_file in ${{ steps.files.outputs.added_modified }}; do
            echo "Do something with ${changed_file}."
            if [[ "${changed_file}" == "_posts/tech-tips"* ]];
            then
              echo "File ${changed_file} matched post."
              echo "::set-output name=post${i}::${changed_file}"
              ((i=i+1))
            fi
          done
      - if: steps.posts.outputs.post0
        name: Publish on Medium
        uses: infraway/post-medium-action@v1.6.0
        id: publish_medium
        with:
          access_token: ${{ secrets.MEDIUM_ACCESS_TOKEN }}
          markdown_file: ${{ steps.posts.outputs.post0 }}
          base_url: https://ritviknag.com
          post_url: https://ritviknag.com/tech-tips

  publish:
    name: publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Publish on Dev.to
        uses: sinedied/publish-devto@v2
        id: publish_devto
        with:
          # Your dev.to personal API key to publish and update articles.
          # See https://docs.dev.to/api/#section/Authentication/api_key
          devto_key: ${{ secrets.DEVTO_TOKEN }}
          # Your GitHub personal access token, used to create commits for updated files.
          # If you have a protected branch, you need to use a personal access token
          # with the 'repo' permission.
          # See https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # (Optional) The files to publish. Default is "posts/**/*.md"
          files: '_posts/tech-tips/*.md'
          # (Optional) The git branch to use. Default is 'main'.
          branch: main
          # (Optional) Use conventional commit messages. Default is false.
          # See https://www.conventionalcommits.org.
          conventional_commits: true
          # (Optional) Do not make actual changes on dev.to.
          dry_run: false
          # dry_run: ${{ github.event_name == 'pull_request' }}
